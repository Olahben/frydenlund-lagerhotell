@inject CompanyUserService _companyUserService
@inject AppState _appState
@using System.Data.SqlTypes

<MudForm>
    <MudGrid Style="justify-content: start !important;">
        <MudItem xs="12" Style="">
            <MudTextField T="string" Class="form-text-field" Style="width: 100%;" HelperText="E-post adressen du brukte da du registrerte deg" Required="true" RequiredError="Obligatorisk felt" Label="E-post" InputType="@InputType.Email" @bind-Value="companyUser.Email" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem Style="padding-bottom: 0;" xs="12">
            <MudTextField Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" T="string" Class="form-text-field" Style="width: 100%;" HelperText="Passordet du brukte da du registrerte deg" Required="true" RequiredError="Obligatorisk felt" Label="Passord" InputType="@PasswordInput" @bind-Value="companyUser.Password" Variant="Variant.Outlined" OnAdornmentClick="TogglePasswordVisibility" AdornmentAriaLabel="Vis passord" />
        </MudItem>
        <MudItem Style="margin-bottom: 32px; padding-top: 2px;">
            @*Should link to forgot password site*@
            <MudLink Style="cursor: pointer;">Glemt passord?</MudLink>
        </MudItem>
        <MudItem xs="12" Style="text-align: center; padding-top: 0;">
            <MudButton ButtonType="@ButtonType.Button" @onclick="Login" Variant="Variant.Filled" Color="Color.Primary" Style="width: 100%; max-width: 130px;">Logg inn</MudButton>
        </MudItem>
    </MudGrid>
</MudForm>

            @code {
                private CompanyUser companyUser = new CompanyUser();

                bool showPassword;
                InputType PasswordInput = InputType.Password;
                string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

                private async Task Login()
                {
                try
                {
                string userId = await _companyUserService.LoginByEmail(companyUser);
                // await AuthenticationStateProvider.GetAuthenticationStateAsync();
                StateHasChanged();
                _appState.NotifyStateChanged();
                NavigationManager.NavigateTo($"user/{userId}");
                }
                catch (KeyNotFoundException e)
                {
                Snackbar.Add("Det er ingen registrerte brukere med denne e-post adressen", MudBlazor.Severity.Error);
                }
                catch (SqlTypeException)
                {
                Snackbar.Add("E-post eller passord er feil", MudBlazor.Severity.Error);
                }
                catch (Exception e)
                {
                Snackbar.Add("Noe gikk galt, prøv igjen senere", MudBlazor.Severity.Error);
                Console.WriteLine(e);
                }
                }

                void TogglePasswordVisibility()
                {
                @if (showPassword)
                {
                showPassword = false;
                PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
                PasswordInput = InputType.Password;
                }
                else
                {
                showPassword = true;
                PasswordInputIcon = Icons.Material.Filled.Visibility;
                PasswordInput = InputType.Text;
                }
                }
            }
